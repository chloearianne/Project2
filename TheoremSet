import java.util.*;

public class TheoremSet {
	private Hashtable<String, Expression> theorems;
	private static String[] illegalNames = {"print","show","assume","mp","mt","co","ic","repeat"};
	//still need to add more to illegal characters, does java have a built in list of them?
	private static String[] illegalChars = {"&", "|", "~", "\"", ">", "=", "<", "(", ")"};
	
	public TheoremSet ( ) {
		theorems = new Hashtable<String, Expression>();
	}

	public Expression put(String s, Expression e) {
		//name cannot be "print", "show", "assume", "mp", "mt", "co", "ic", or "repeat"
		
		for (String illegalName: illegalNames){
			if (s.toLowerCase().equals(illegalName)){
				throw new IllegalArgumentException("Cannot use the word " + illegalName + " as the name of a theorem");
			}
		}
		
		//name cannot contain special symbols &, | , ~ , ect.
		for (String illegalChar : illegalChars){
			if (s.contains(illegalChar)){
				throw new IllegalArgumentException("Cannot use the character " + illegalChar + " in the name of a theorem");
			}
		}
		
		//name should be one word only, separated by -, letters/numbers only
		//add check here
		
		theorems.put(s, e);
		
		return e;
	}
	
	public Expression getTheorem(String s){
		return theorems.get(s);
	}
	
	public Enumeration<String> theoremNamesEnumeration(){
		return theorems.keys();
	}
	
	public Enumeration<Expression> theoremEnumeration(){
		return theorems.elements();
	}
	
	public boolean hasTheorem(String s){
		return theorems.containsKey(s);
	}
	
	//takes in the string name of a theorem and checks if exp implements the corresponding theorem correctly
	//returns true if it is a valid use of the theorem s, and false if not
	public boolean validTheorem(String s, Expression exp){
		if (!hasTheorem(s)){
			return false;
		}
		
		String theorem = getTheorem(s).toString();
		String expression = exp.toString();
		int exprPos = 0;
		Hashtable<Character, String> myVars = new Hashtable<Character,String>();
		String specialSymbols = "()&|~=<"; 
        for (int i=0; i<theorem.length()-1; i++) {
        	//if they have the same character, continue
            if (theorem.charAt(i) == expression.charAt(exprPos) && specialSymbols.contains("" + theorem.charAt(i))){
            	continue;
            }
            else{
            	int start = exprPos;
            	int end = exprPos;
            	int nested = 0;
            	//not already a pre-defined variable, needs to be defined
            	if(!myVars.contains(theorem.charAt(i))){
            		String exprValue = "";
            		if(expression.charAt(exprPos))
            		//check for ~
            		//check for a complete () expression
            		myVars.put(theorem.charAt(i), exprValue);
            	} else{
            		
            	}
            	
            	
            	exprPos = 0;
            	
            }
            
            exprPos++;
        }
		
		return false;
	}
}

